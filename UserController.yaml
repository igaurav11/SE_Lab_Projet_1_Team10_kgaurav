openapi: 3.0.1
info:
  title: User Operations
  description: OpenAPI specification for User Operations
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/KSNAVODAYAN2005/User-Controller/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: UserController
  description: User Operations
paths:
  /:
    get:
      summary: Homepage
      description: Redirects to the homepage.
      responses:
        "200":
          description: Successful operation
  /signup:
    get:
      summary: User Registration Page
      description: Displays the registration page for users.
      responses:
        "200":
          description: Successful operation
    post:
      summary: Register User
      description: Registers a new user.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/signup_body'
        required: true
      responses:
        "200":
          description: Successful operation
  /login:
    get:
      summary: Login Page
      description: Displays the login page.
      responses:
        "200":
          description: Successful operation
    post:
      summary: User Login
      description: Authenticates a user.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/login_body'
        required: true
      responses:
        "200":
          description: Successful operation
  /dashboard:
    get:
      summary: User Dashboard
      description: Displays the user dashboard.
      responses:
        "200":
          description: Successful operation
  /updateProfile/{username}:
    get:
      summary: Edit User Profile
      description: Displays the form to edit user profile.
      parameters:
      - name: username
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
  /updateuserDetails:
    post:
      summary: Update User Details
      description: Updates the user profile details.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Successful operation
  /profile:
    get:
      summary: User Profile
      description: Displays the user profile.
      responses:
        "200":
          description: Successful operation
  /logout:
    get:
      summary: Logout
      description: Logs out the user.
      responses:
        "200":
          description: Successful operation
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
    signup_body:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
    login_body:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
